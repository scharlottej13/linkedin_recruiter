{
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.enabled": true,
    // @sync os=linux
    // "python.pythonPath": "/Users/scharlottej13/anaconda3/envs/linkedin_recruiter/bin/python",
    // @sync os=windows
    "python.pythonPath": "C:\\ProgramData\\Anaconda3\\envs\\linkedin_recruiter\\python.exe",
    "python.formatting.autopep8Args": [
        "--max-line-length",
        "80",
        "--aggressive"
    ],

    "[r]": {
        "editor.formatOnSave": false,
        // Controls the rendering size of tabs in characters. If set to auto, the value will be guessed based on the opened file.
        "editor.tabSize": 2,
        // Controls if the editor will insert spaces for tabs. If set to auto, the value will be guessed based on the opened file.
        "editor.insertSpaces": true
    },
    "r.bracketedPaste": true,
    "r.rterm.mac": "/Users/scharlottej13/anaconda3/envs/linkedin_recruiter/bin/radian",
    "r.rpath.mac": "/usr/local/bin/R",
    "r.lsp.debug": true,
    "r.lsp.diagnostics": true,
    "r.rterm.option": [
        "--no-save",
        "--no-restore",
        "--r-binary=/usr/local/bin/R"
    ],
        // Controls if quick suggestions should show up while typing
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": false
        },
        // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
        "editor.acceptSuggestionOnCommitCharacter": true,
        // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
        "editor.acceptSuggestionOnEnter": "on",
        // Controls the delay in ms after which quick suggestions will show up.
        "editor.quickSuggestionsDelay": 10,
        // Controls if suggestions should automatically show up when typing trigger characters
        "editor.suggestOnTriggerCharacters": true,
        // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
        "editor.tabCompletion": "off",
        // Controls whether sorting favours words that appear close to the cursor
        "editor.suggest.localityBonus": true,
        // Controls how suggestions are pre-selected when showing the suggest list
        "editor.suggestSelection": "recentlyUsed",
        // Enable word based suggestions
        "editor.wordBasedSuggestions": true,
        // Enable parameter hints
        "editor.parameterHints.enabled": true,
}